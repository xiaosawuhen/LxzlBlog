<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
						   http://www.springframework.org/schema/security 
						   http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- <http /> -->
	<!-- <http> -->
	<!-- <intercept-url pattern="/**" access="hasRole('ADMIN')" /> -->
	<!-- <form-login /> -->
	<!-- <logout /> -->
	<!-- </http> -->
	<http pattern="/static/**" security="none" />
	<http pattern="/login*" security="none" />

	<http auto-config="true" use-expressions="true">

		<intercept-url pattern="/login" access="permitAll" />
		<!-- <intercept-url pattern="/main/admin" access="hasRole('ROLE_ADMIN')" 
			/> -->
		<!-- <intercept-url pattern="/main/common" access="hasRole('ROLE_USER')" 
			/> -->
		<intercept-url pattern="/**/**" access="hasRole('ROLE_ADMIN')" />

		<csrf disabled="true" token-repository-ref="cookieCsrfTokenRepository" />

<!-- authentication-failure-url="/auth/login?error=true" -->
<!-- 			default-target-url="/main/common" -->
		<form-login login-page="/login" login-processing-url="/j_spring_security_check"
			password-parameter="j_password" username-parameter="j_username"
			authentication-success-handler-ref="authenticationSuccessHandler" 
			authentication-failure-handler-ref="authenticationFailedHandler"/>

		<logout invalidate-session="true" logout-success-url="/login"
			logout-url="/logout" />

	</http>

	<!-- <authentication-manager> -->
	<!-- <authentication-provider> -->
	<!-- <user-service> -->
	<!-- <user name="user" password="password" authorities="ROLE_USER, ROLE_ADMIN" 
		/> -->
	<!-- <user name="bob" password="bobspassword" authorities="ROLE_USER" /> -->
	<!-- </user-service> -->
	<!-- </authentication-provider> -->
	<!-- </authentication-manager> -->

	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<!-- 对密码进行MD5编码 -->
	<b:bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" />

	<!-- 通过 customUserDetailsService,Spring会自动的用户的访问级别. 也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联. -->
	<b:bean id="customUserDetailsService" class="com.lxzl.security.CustomUserDetailsService" />

	<b:bean id="cookieCsrfTokenRepository"
		class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
	</b:bean>

	<b:bean id="authenticationSuccessHandler" class="com.lxzl.security.success.SuccessHandler">
		<b:property name="defaultTargetUrl" value="/index">
		</b:property>
	</b:bean>
	
	<b:bean id="authenticationFailedHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<b:property name="defaultFailureUrl" value="/login">
		</b:property>
	</b:bean>
</b:beans>